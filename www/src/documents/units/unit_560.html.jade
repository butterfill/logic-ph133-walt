---cson
layout: 'deck_units' 
title: "There Is a Store for Everything"
description: "Explains how to translate English sentences involving a combination of universal and existential quantifiers into awFOL with an example."
tags: ['quantification','semantics','translation']
depends: ['740','742']
source: ['ph126 fastlecture 06', 'ph126 lecture 12']
duration: 10
book: ['11.2','11.3']
exercises: ['11.3', '11.4, 11.8, 11.9', '11.11, 11.13, *11.10']
exercises_fast: ['11.8, 11.9, *11.11']
sequence: 790
exNormal: [
  '/ex/create/qq/LeftOf(a,b)'
  '/ex/create/qq/exists y LeftOf(a,y)'
  '/ex/trans/domain/things/names/a=Ayesha/predicates/LeftOf2/sentence/exists y LeftOf(a,y)'
  '/ex/create/qq/exists x exists y LeftOf(x,y)'
  '/ex/trans/domain/things/names/-/predicates/LeftOf2-x-is-left-of-y/sentence/exists x exists y LeftOf(x,y)'
  
  '/ex/create/qq/exists x exists y (Happy(x) and LeftOf(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Happy1|LeftOf2-x-is-left-of-y/sentence/exists x exists y (Happy(x) and LeftOf(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Sad1|Above2-x-is-above-of-y/sentence/Something is above a sad thing.'
  '/ex/create/qq/exists x exists y (Happy(x) and Sad(y) and DifferentSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Happy1|Sad1|DifferentSize2-x’s-size-differs-from-y’s-size/sentence/exists x exists y (Happy(x) and Sad(y) and DifferentSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Bigger2-x-is-bigger-than-y/sentence/Some things are bigger than others'
  
  '/ex/create/qq/DifferentSize(a,b)'
  '/ex/create/qq/exists y DifferentSize(a,y)'
  '/ex/trans/domain/things/names/a=Ayesha/predicates/DifferentSize2-x’s-size-differs-from-y’s-size/sentence/exists y DifferentSize(a,y)'
  '/ex/create/qq/exists x exists y (DifferentSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/DifferentSize2-x’s-size-differs-from-y’s-size/sentence/Some things differ in size.'
  
  '/ex/create/qq/all x exists y (DifferentSize(x,y))'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/-/predicates/DifferentSize2-x’s-size-differs-from-y’s-size/sentence/all x exists y (DifferentSize(x,y))'
  '/ex/create/qq/all x exists y (DifferentSize(x,y) and SameShape(x,y))'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/-/predicates/DifferentSize2-x’s-size-differs-from-y’s-size|SameShape2-x-and-y-have-the-same-shape/sentence/all x exists y (DifferentSize(x,y) and SameShape(x,y))'
  
  '/ex/create/qq/exists x exists y (DifferentSize(x,y))|all x all y (DifferentSize(x,y) arrow SameShape(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/DifferentShape2-x’s-shape-differs-from-y’s-shape|SameSize2-x-has-the-same-size-as-y/sentence/All things that differ in shape have the same size.'
  
  '/ex/create/qq/exists x exists y (Happy(x) and Sad(y))'
  '/ex/trans/domain/5things/names/-/predicates/Happy1|Sad1/sentence/exists x exists y (Happy(x) and Sad(y))'
  '/ex/create/qq/exists x exists y (DifferentSize(x,y) and Happy(x) and Sad(y))'
  '/ex/create/qq/exists x exists y (DifferentSize(x,y) and Happy(x) and Sad(y))|all x all y ((Happy(x) and Sad(y)) arrow LeftOf(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Happy1/sentence/Some are happy and some are not.'
  '/ex/create/qq/exists x exists y (Happy(x) and Sad(y))|all x all y (SameSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/SameSize2-x-is-the-same-size-as-y/sentence/all x all y (SameSize(x,y))'
  '/ex/create/qq/exists x exists y (Happy(x) and Sad(y))|all x all y (not x=y arrow DifferentShape(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/DifferentShape2-x’s-shape-differs-from-y’s-shape/sentence/all x all y (not x=y arrow DifferentShape(x,y))'
  
  """/ex/TorF/world/[{"x":5,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":["}:","^",")"]},{"x":0,"y":0,"w":2,"h":3,"n":"","c":"pink","f":[":","^","|"]},{"x":7,"y":0,"w":2,"h":2,"n":"","c":"purple","f":[";","-","("]},{"x":2,"y":0,"w":2,"h":3,"n":"","c":"green","f":[":","-","("]}]/qq/all x exists y SameSize(x,y)|exists y all x SameSize(x,y)"""
  """/ex/TorF/world/[{"x":0,"y":0,"w":2,"h":2,"n":"","c":"pink","f":[":","-",")"]},{"x":2,"y":0,"w":2,"h":2,"n":"","c":"white","f":[";","^","()"]}]/qq/all x exists y SameSize(x,y)|exists y all x SameSize(x,y)"""
  """/ex/TorF/world/[{"x":2,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":["}:","^",")"]},{"x":0,"y":0,"w":2,"h":3,"n":"","c":"pink","f":[":","^","|"]}]/qq/all x exists y SameSize(x,y)|exists y all x SameSize(x,y)"""
  """/ex/create/from/all x exists y SameSize(x,y)/to/exists y all x SameSize(x,y)"""
  
  '/ex/TorF/qq/‘Give me a note’ exemplifies lexical ambiguity|‘Give me a note’ exemplifies structural ambiguity|‘I shot an elephant in my pyjamas’ exemplifies lexical ambiguity|‘I shot an elephant in my pyjamas’ exemplifies structural ambiguity|‘There is a store for everything’ exemplifies structural ambiguity'
  '/ex/trans/domain/9things/names/-/predicates/StoreFor2-x-is-a-store-for-y/sentence/exists y all x StoreFor(y,x)'
  '/ex/trans/domain/9things/names/-/predicates/StoreFor2-x-is-a-store-for-y/sentence/all y exists x StoreFor(x,y)'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/-/predicates/Ancestor2-x-is-y’s-ancestor/sentence/Everyone has an ancestor'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/a=Ayesha/predicates/Ancestor2-x-is-y’s-ancestor/sentence/Ayesha is an ancestor of everyone except herself.'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/a=Ayesha/predicates/Ancestor2-x-is-y’s-ancestor/sentence/Someone is an ancestor of everyone except herself.'
]
exFast: [
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/a=Ayesha/predicates/LeftOf2/sentence/exists y LeftOf(a,y)'
  '/ex/create/qq/exists x exists y LeftOf(x,y)'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Dura/names/-/predicates/LeftOf2-x-is-left-of-y/sentence/exists x exists y LeftOf(x,y)'
  
  '/ex/create/qq/exists x exists y (Happy(x) and LeftOf(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Happy1|LeftOf2-x-is-left-of-y/sentence/exists x exists y (Happy(x) and LeftOf(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Sad1|Above2-x-is-above-of-y/sentence/Something is above a sad thing.'
  '/ex/create/qq/exists x exists y (Happy(x) and Sad(y) and DifferentSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Happy1|Sad1|DifferentSize2-x’s-size-differs-from-y’s-size/sentence/exists x exists y (Happy(x) and Sad(y) and DifferentSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Bigger2-x-is-bigger-than-y/sentence/Some things are bigger than others'
  
  '/ex/create/qq/exists x exists y (DifferentSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/DifferentSize2-x’s-size-differs-from-y’s-size/sentence/Some things differ in size.'
  
  '/ex/create/qq/all x exists y (DifferentSize(x,y))'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/-/predicates/DifferentSize2-x’s-size-differs-from-y’s-size/sentence/all x exists y (DifferentSize(x,y))'
  '/ex/create/qq/all x exists y (DifferentSize(x,y) and SameShape(x,y))'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/-/predicates/DifferentSize2-x’s-size-differs-from-y’s-size|SameShape2-x-and-y-have-the-same-shape/sentence/all x exists y (DifferentSize(x,y) and SameShape(x,y))'
  
  '/ex/create/qq/exists x exists y (DifferentSize(x,y))|all x all y (DifferentSize(x,y) arrow SameShape(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/DifferentShape2-x’s-shape-differs-from-y’s-shape|SameSize2-x-has-the-same-size-as-y/sentence/All things that differ in shape have the same size.'
  
  '/ex/create/qq/exists x exists y (DifferentSize(x,y) and Happy(x) and Sad(y))'
  '/ex/create/qq/exists x exists y (DifferentSize(x,y) and Happy(x) and Sad(y))|all x all y ((Happy(x) and Sad(y)) arrow LeftOf(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/Happy1/sentence/Some are happy and some are not.'
  '/ex/create/qq/exists x exists y (Happy(x) and Sad(y))|all x all y (SameSize(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/SameSize2-x-is-the-same-size-as-y/sentence/all x all y (SameSize(x,y))'
  '/ex/create/qq/exists x exists y (Happy(x) and Sad(y))|all x all y (not x=y arrow DifferentShape(x,y))'
  '/ex/trans/domain/5things/names/-/predicates/DifferentShape2-x’s-shape-differs-from-y’s-shape/sentence/all x all y (not x=y arrow DifferentShape(x,y))'

  """/ex/TorF/world/[{"x":5,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":["}:","^",")"]},{"x":0,"y":0,"w":2,"h":3,"n":"","c":"pink","f":[":","^","|"]},{"x":7,"y":0,"w":2,"h":2,"n":"","c":"purple","f":[";","-","("]},{"x":2,"y":0,"w":2,"h":3,"n":"","c":"green","f":[":","-","("]}]/qq/all x exists y SameSize(x,y)|exists y all x SameSize(x,y)"""
  """/ex/TorF/world/[{"x":0,"y":0,"w":2,"h":2,"n":"","c":"pink","f":[":","-",")"]},{"x":2,"y":0,"w":2,"h":2,"n":"","c":"white","f":[";","^","()"]}]/qq/all x exists y SameSize(x,y)|exists y all x SameSize(x,y)"""
  """/ex/TorF/world/[{"x":2,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":["}:","^",")"]},{"x":0,"y":0,"w":2,"h":3,"n":"","c":"pink","f":[":","^","|"]}]/qq/all x exists y SameSize(x,y)|exists y all x SameSize(x,y)"""
  """/ex/create/from/all x exists y SameSize(x,y)/to/exists y all x SameSize(x,y)"""
        
  '/ex/TorF/qq/‘Give me a note’ exemplifies lexical ambiguity|‘Give me a note’ exemplifies structural ambiguity|‘I shot an elephant in my pyjamas’ exemplifies lexical ambiguity|‘I shot an elephant in my pyjamas’ exemplifies structural ambiguity|‘There is a store for everything’ exemplifies structural ambiguity'
  '/ex/trans/domain/9things/names/-/predicates/StoreFor2-x-is-a-store-for-y/sentence/exists y all x StoreFor(y,x)'
  '/ex/trans/domain/9things/names/-/predicates/StoreFor2-x-is-a-store-for-y/sentence/all y exists x StoreFor(x,y)'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/-/predicates/Ancestor2-x-is-y’s-ancestor/sentence/Everyone has an ancestor'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/a=Ayesha/predicates/Ancestor2-x-is-y’s-ancestor/sentence/Ayesha is an ancestor of everyone except herself.'
  '/ex/trans/domain/Ayesha|Beatrice|Caitlyn|Daisuke|Eugine/names/a=Ayesha/predicates/Ancestor2-x-is-y’s-ancestor/sentence/Someone is an ancestor of everyone except herself.'

  '/ex/counter/from/all y exists x StoreFor(x,y)/to/exists y all x StoreFor(y,x)'
  
]
---



include ../../../fragments/unit_mixins

+slide({bkg:'unit_560/slide-023.jpeg'})
  .notes 
  .handout There is a store for everything:
  .handout \hspace{3mm}	∃y∀x StoreFor(y,x) 
  .handout \hspace{3mm} 	∀y∃x StoreFor(x,y)
  .handout Other sentences to translate:
  .handout  \hspace{3mm} Wikipedia has an article about everything
  .handout  \hspace{3mm} 	Everyone hurts someone they love
  .handout  \hspace{3mm} 	Someone hurts everyone she loves


+slide({bkg:'unit_560/slide-024.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-025.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-026.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-027.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-028.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-029.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-030.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-031.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-032.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-033.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-034.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-035.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-036.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-037.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-038.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-039.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-040.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-041.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-042.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-043.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-044.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-045.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-046.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-047.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-048.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-049.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-050.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-051.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-052.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-053.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-054.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-055.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-056.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-057.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-058.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-059.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-060.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-061.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-062.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-063.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-064.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-065.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-066.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-067.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-068.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-069.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-070.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-071.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-072.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-073.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-074.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-075.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-076.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-077.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-078.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-079.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-080.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-081.jpeg'})
  .notes 

+slide({bkg:'unit_560/slide-082.jpeg'})
  .notes 

+slide({bkg:'unit_560/xslide-057.jpeg'})
  .notes 

