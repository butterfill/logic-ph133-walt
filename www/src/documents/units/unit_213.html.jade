---cson
layout: 'deck_units' 
title: "Translating a Simple Argument"
description: "Illustrates how to translate an argument from English into our formal language awFOL."
tags: ['translation']
depends: ['unit_211']
source: ['ph133 lecture 03']
duration: 4
sequence: 190
book: ['3.2']
handout: false
---


include ../../../fragments/unit_mixins

+slide({bkg:'unit_213/slide-001.jpeg'})
  .notes: :t()
    We're studying a formal system of proof called Fitch.
    Here's the first rule of Fitch.  It's called  conjunction elimimnation.
    The rule says that if you have a conjunction of two things in your proof, you can add a new line to your proof containing either one.

+slide({bkg:'unit_213/slide-0011.jpeg'})
  .notes: :t()
    So if you something like this in your proof ...

+slide({bkg:'unit_213/slide-0012.jpeg'})
  .notes: :t()
    ... you can add something matching this.
    I'll explain how to use conjunction elimination in a moment.  First, let's look at another rule.

+slide({bkg:'unit_213/slide-002.jpeg'})
  .notes: :t()
    This rule is called conjunction introduction.
    The rule says that if you have two things in your proof, you can extend your proof by one line to add their conjunction.

+slide({bkg:'unit_213/slide-0021.jpeg'})
  .notes: :t()
    So if you these things matching these in your proof ...

+slide({bkg:'unit_213/slide-0022.jpeg'})
  .notes: :t()
    ... you can add something matching this.

+slide({bkg:'unit_213/slide-002.jpeg'})
  .notes: :t()
    So let's look at an application of our rules of proof.
    I want to do this by translating an argument from English into our formal language awFOL.

+slide({bkg:'unit_213/slide-003.jpeg'})
  .notes This doesn’t seem to be true.

+slide({bkg:'unit_213/slide-004.jpeg'})
  .notes But this does seem to be true, or at least horribly plausible.


+slide({bkg:'unit_213/slide-005.jpeg'})
  .notes And this seems right too, maybe.  

+slide({bkg:'unit_213/slide-006.jpeg'})
  .notes: :t()
    Now if we take the first two sentences as premises and the second as a conclusion, we have an argument.
    Is the argument logically valid?
    Apparently not because the premises are true and the conclusion false.
    But look what happens when we translate it into awFOL assuming that the english 'and' means the same as the awFOL conjunction symbol, '∧'.
  

+slide({bkg:'unit_213/slide-007.jpeg'})
  .notes The first premise comes out as P∧Q

+slide({bkg:'unit_213/slide-008.jpeg'})
  .notes Where P stands for the sentence 'The world will overheat'.

+slide({bkg:'unit_213/slide-009.jpeg'})
  .notes And Q stands for 'We will all die'.

+slide({bkg:'unit_213/slide-010.jpeg'})
  .notes What about the second premise?

+slide({bkg:'unit_213/slide-011.jpeg'})
  .notes This comes out as Q∧R.

+slide({bkg:'unit_213/slide-012.jpeg'})
  .notes: :t()
    The key thing is that we're re-using Q because the sentence about the world overheating occurs in both the first
    and second premises.  Where we have the same English sentence, we have to use the same sentence-letter in awFOL.

+slide({bkg:'unit_213/slide-013.jpeg'})
  .notes Now what about the conclusion?

+slide({bkg:'unit_213/slide-014.jpeg'})
  .notes This is P∧R.  Not that both sentences are already familiar.

+slide({bkg:'unit_213/slide-015.jpeg'})
  .notes P occurs in the first premise ...

+slide({bkg:'unit_213/slide-016.jpeg'})
  .notes ... and Q occurs in the second premise.

+slide({bkg:'unit_213/slide-017.jpeg'})
  .notes So here's our argument.

+slide({bkg:'unit_213/slide-018.jpeg'})
  .notes: :t()
    Since we're going to do a formal proof, we should use the vertical and horizontal lines.
    (Surely you remember that the vertical line runs the length of the argument, and the horizontal line separates premises from conclusion.)
  

+slide({bkg:'unit_213/slide-019.jpeg'})
  .notes 

+slide({bkg:'unit_213/slide-020.jpeg'})
  .notes: :t()
    We also need to use line numbers.

