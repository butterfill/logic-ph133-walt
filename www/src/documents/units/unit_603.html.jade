---cson
layout: 'deck_units' 
title: "Not Or"
tags: ['translation']
description: "Negating disjunctions is tricky.  This contrasts ¬(A ∨ B) with ¬A ∨ ¬B."
depends: ['']
source: ['']
duration: 5
book: ['3.7']
exercises: ['3.19','5.18']
exercises_fast: []
exNormal: [
  '/ex/scope/qq/¬(A ∨ B)|¬A ∨ ¬B|¬A and ¬B|¬(A arrow B)'
  '/ex/create/qq/Frowning(a)'
  '/ex/create/qq/Frowning(a)|Sad(a)'
  '/ex/tt/qq/not A or not B|not (A or B)'
  '/ex/create/orValid/from/not Frowning(a) or not Sad(b)/to/not (Frowning(a) or Sad(b))'
  '/ex/create/orValid/from/not (Frowning(a) or Sad(b))/to/not Frowning(a) or not Sad(b)'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/Frowning1|Sad1/sentence/not Frowning(a) or not Sad(b)'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/Frowning1|Sad1/sentence/not (Frowning(a) or Sad(b))'
  
  '/ex/tt/qq/not A and not B|not (A and B)'

  '/ex/create/qq/not (not Wide(a) or Tall(b))'
  '/ex/tt/qq/not A and B|not (not A or B)'
  '/ex/create/orValid/from/not Tall(a) and Wide(b)/to/not (not Tall(a) or Wide(b))'
  '/ex/create/orValid/from/not (not Tall(a) or Wide(b))/to/not Tall(a) and Wide(b)'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/Tall1|Wide1/sentence/not Tall(a) and Wide(b)'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/Tall1|Wide1/sentence/not (not Tall(a) or Wide(b))'
]
---

include ../../../fragments/unit_mixins
include ../../../fragments/logic_mixins

+slide_middle
  .notes I was asked, What is the difference between putting the negation outside of parenthesis and putting into individual brackets?
  .notes Let's have a look.
  p.center ‘What is the difference between putting the negation outside of parenthesis and putting into individual brackets?’

.slide
  .img.handout(data-src='img/tt_unit_603.png')
  .words
    .container_12: .grid_12
      .notes Consider this sentence, 'Either the music has stopped or I am dead.'
      p Either 
        span.A the music has stopped
        span  or  
        span.B I am dead
        span .
      .slide
        p.indent.nodim 
          span.A A
          span  ∨  
          span.B B
        .notes Let's suppose we can represent it in awFOL as A ∨ B.
      +highlight('.A', 'yellow')
      
      +unhighlight_('.A', 'yellow')
      +highlight('.B', 'blue')
      
      +unhighlight_('.B', 'blue')
      .slide.nodim
        .notes What happens if you deny the whole sentence?  
        p.hidelater.em-above That’s not true.
        .slide
          p.indent.nodim
            .notes To capture this denial in awFOL, we put negation outside the brackets.
            span.negation ¬
            span (A ∨ B)
      .slide.nodim
        .notes Now consider this alternative sentence, 'Either the music has not stopped or I am not dead.'
        p.em-above Either the music has not stopped or I am not dead.
        .slide
          p.indent.nodim
            .notes To capture this in awFOL, we put negation inside the brackets.
            span.negation ¬
            span A ∨ 
            span.negation ¬
            span B
      +highlight('.negation','pink')
      .notes So now we have a sentence with negation outside the brackets and another one with negation inside the brackets.
      .notes And, thinking about the English sentences, you can perhaps see that if we put negation inside the brackets we are not denying the sentence, just asserting a different disjunction.
      .notes Let's see how these two differ by constructing truth-tables.
      
  #truth-tables.slide
    .notes In constructing truth-tables we start with the truth table for disjunction (∨).
    .bottom-white.invert
      .center.hem-above
          +truth-table(['A ∨ B','¬(A ∨ B)','¬A','¬B','¬A ∨ ¬B'],[['T','T','T','F'],['F','F','F','T'],['F','F','T','T'],['F','T','F','T'],['F','T','T','T']])
    +show(['#truth-tables .result-col-2'])
    .notes To get the truth table for ¬(A ∨ B) we merely need to flip the truth-values of the truth-table for (A ∨ B).
    +show(['#truth-tables .result-col-3','#truth-tables .result-col-4'])
    .notes By contrast, if we want the truth-table for ¬A ∨ ¬B, we need to start with truth-tables for ¬A and for ¬B.
    +show(['#truth-tables .result-col-5'])
    .notes We then combine these two truth tables using disjunction -- so it's True whenever  ¬A is True or ¬B is True, and False otherwise.
    +hide(['#truth-tables .result-col-1','#truth-tables .result-col-3','#truth-tables .result-col-4'])
    .notes Now focus just on the truth tables for our two sentences, one with negation inside the brackets the other with negation outside the brackets
    mixin tt-highlight-rows([1,3], '#truth-tables')
    .notes The truth of the first denial sentence, ¬(A ∨ B), guarantees that you're alive (B = 'I am dead'), whereas the truth of the second denial, ¬A ∨ ¬B, doesn't entail that you're alive.
    .notes Sometimes students decide they'll ignore brackets and hope for the best.  But the difference between putting the negation outside of parenthesis and putting into individual brackets is a matter of life or death.
