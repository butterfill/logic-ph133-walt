---cson
layout: 'deck_units' 
title: "Don't use ∃ with →"
tags: ['translation']
description: "Stresses that ∀ works with → by examining sentences with ∀ and ∧, and ∃ with →."
depends: ['']
source: ['']
duration: 7
book: []
exercises: ['9.10','9.15--9.17','*9.18--9']
exercises_fast: ['9.10']
sequence: 590
exNormal: [
  """/ex/TorF/world/[{"x":2,"y":0,"w":2,"h":2,"n":"","c":"white","f":[":","^","|"]},{"x":0,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":'","-","("]}]/qq/all x (Sad(x) arrow Crying(x))|all x (Sad(x) and Crying(x))"""
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Everything is sad and crying.'
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Everything sad is crying.'
  '/ex/create/qq/exists x Tall(x)|all x (Tall(x) arrow Happy(x))|not (all x (Tall(x) and Happy(x)))'
  
  """/ex/TorF/world/[{"x":0,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":",">","|"]}]/qq/exists x (Sad(x) and Crying(x))|all x (Sad(x) arrow Crying(x))"""
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Something is sad and crying.'
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Something is not sad or is crying.'
  '/ex/create/qq/exists x Tall(x)|exists x (Tall(x) arrow Happy(x))|not (exists x (Tall(x) and Happy(x)))'

  '/ex/create/qq/exists x LeftOf(x,a)'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))|exists x (LeftOf(x,a) and Tall(x))'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))|exists x (LeftOf(x,a) and Tall(x))|exists x (LeftOf(x,a) and not Tall(x))'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))|exists x (LeftOf(x,a) and Tall(x))|exists x (LeftOf(x,a) and not Tall(x))|all x (LeftOf(x,a) arrow LargerThan(x,a))'
  
  '/ex/create/qq/exists x RightOf(x,a)'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x))'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x) and Happy(x))'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x) and Happy(x) and Frowning(x))'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x) and Happy(x) and Frowning(x) and LeftOf(x,b))'
  
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y/sentence/Something is left of Ayesha'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y|RightOf2-x-is-right-of-y/sentence/Something is left of Ayesha and right of Beatrice'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y|RightOf2-x-is-right-of-y|Tall1/sentence/Something tall is left of Ayesha and right of Beatrice'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y|RightOf2-x-is-right-of-y|Tall1|Sad1/sentence/Something tall and sad is left of Ayesha and right of Beatrice'
]
exFast: [
  """/ex/TorF/world/[{"x":2,"y":0,"w":2,"h":2,"n":"","c":"white","f":[":","^","|"]},{"x":0,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":'","-","("]}]/qq/all x (Sad(x) arrow Crying(x))|all x (Sad(x) and Crying(x))"""
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Everything is sad and crying.'
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Everything sad is crying.'
  '/ex/create/qq/exists x Tall(x)|all x (Tall(x) arrow Happy(x))|not (all x (Tall(x) and Happy(x)))'
  
  """/ex/TorF/world/[{"x":0,"y":0,"w":2,"h":2,"n":"","c":"yellow","f":[":",">","|"]}]/qq/exists x (Sad(x) and Crying(x))|all x (Sad(x) arrow Crying(x))"""
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Something is sad and crying.'
  '/ex/trans/domain/people/names/-/predicates/Sad1|Crying1/sentence/Something is not sad or is crying.'
  '/ex/create/qq/exists x Tall(x)|exists x (Tall(x) arrow Happy(x))|not (exists x (Tall(x) and Happy(x)))'

  '/ex/create/qq/exists x LeftOf(x,a)'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))|exists x (LeftOf(x,a) and Tall(x))'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))|exists x (LeftOf(x,a) and Tall(x))|exists x (LeftOf(x,a) and not Tall(x))'
  '/ex/create/qq/exists x LeftOf(x,a)|all x (LeftOf(x,a) arrow Sad(x))|exists x (LeftOf(x,a) and Tall(x))|exists x (LeftOf(x,a) and not Tall(x))|all x (LeftOf(x,a) arrow LargerThan(x,a))'
  
  '/ex/create/qq/exists x RightOf(x,a)'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x))'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x) and Happy(x))'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x) and Happy(x) and Frowning(x))'
  '/ex/create/qq/exists x RightOf(x,a)|exists x (RightOf(x,a) and Tall(x) and Happy(x) and Frowning(x) and LeftOf(x,b))'
  
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y/sentence/Something is left of Ayesha'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y|RightOf2-x-is-right-of-y/sentence/Something is left of Ayesha and right of Beatrice'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y|RightOf2-x-is-right-of-y|Tall1/sentence/Something tall is left of Ayesha and right of Beatrice'
  '/ex/trans/domain/people/names/a=Ayesha|b=Beatrice/predicates/LeftOf2-x-is-left-of-y|RightOf2-x-is-right-of-y|Tall1|Sad1/sentence/Something tall and sad is left of Ayesha and right of Beatrice'
]
---

include ../../../fragments/slide_mixins



//- compare and contrast formulae
.slide
  .handout \begin{minipage}{\columnwidth}
  .handout Is true ∃x(Square(x) → Broken(x)) in this world?
  .handout.img(data-src='img/word_02.png')
  .handout \end{minipage}
  .handout ∃x(Square(x) → Broken(x))
  .handout \hspace{3mm} ⫤⊨
  .handout ∃x(¬Square(x) ∨ Broken(x))
  .handout \hspace{3mm} ⫤⊨
  .handout ∃x(¬Square(x)) ∨ ∃x(Broken(x))
  .words#PAsdqT
    .container_12
      .grid_7
        #universal_arrow.universal_arrow
          p
            span.invert.bkg-words-highlight-white 1.
            div(style="margin-top:-1em;margin-left:0.5em;") ∀x(Square(x) ∧ Broken(x))
          p
            span.invert.bkg-words-highlight-white 2.
            div(style="margin-top:-1em;margin-left:0.5em;") ∀x(Square(x) → Broken(x))
          .step5.hide
            div(style="margin-top:-0.25em;margin-left:1em;") ⫤⊨
            span.invert.bkg-words-highlight-white 3.
            div(style="margin-top:-1em;margin-left:0.5em;") ∀x(¬Square(x) ∨ Broken(x))
          .em-above
        #existential_conjunction.existential_conjunction
          p
            .step6.hide
              span.invert.bkg-words-highlight-white 4.
              div(style="margin-top:-1em;margin-left:0.5em;") ∃x(Square(x) ∧ Broken(x))
          p
            .step6.hide
              span.invert.bkg-words-highlight-white 5.
              div(style="margin-top:-1em;margin-left:0.5em;") ∃x(Square(x) → Broken(x))
          p
            .step9.hide
              div(style="margin-top:-0.25em;margin-left:1em;") ⫤⊨
              span.invert.bkg-words-highlight-white 6.
              div(style="margin-top:-1em;margin-left:0.5em;") ∃x(¬Square(x) ∨ Broken(x))
          p
            .step10.hide
              div(style="margin-top:-0.25em;margin-left:1em;") ⫤⊨
              span.invert.bkg-words-highlight-white 7.
              div(style="margin-top:-1em;margin-left:0.5em;") ∃x(¬Square(x)) ∨ ∃x(Broken(x))
          p
            .step11.hide
              div nb
              div(style="margin-left:0.5em;margin-right:-12em;") ∀x(¬Square(x) ∨ Broken(x)) ⊭  ∀x(¬Square(x)) ∨ ∀x(Broken(x))
              
      .grid_5.right-side
        .universal_arrow.center
          img.step2.hide(src='/img/world_01.png')
          p.step3.hide
            span.invert.bkg-words-highlight-red 1. is false
          p.step4.hide
            span.invert.bkg-words-highlight-lime 2. is true
        .existential_conjunction.center.hide
          img(src='/img/world_02.png')
          p.step7.hide
            span.invert.bkg-words-highlight-red 4. is false
          p.step8.hide
            span.invert.bkg-words-highlight-pink 5. is ???
      mixin steps(5, '#PAsdqT')
      mixin fade(['#PAsdqT .universal_arrow'])
      mixin step(6, '#PAsdqT')
      mixin showremove(['#PAsdqT .right-side .existential_conjunction'],['#PAsdqT .right-side .universal_arrow'])
      mixin steps(7, 10, '#PAsdqT')
      +show('.step11')


a.deck-permalink(href='.', title='Permalink to this slide') #
